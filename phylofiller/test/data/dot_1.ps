%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.5.1
%%CreationDate: Tue Sep 12 17:26:27 2023
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (dot.ps)
} def

/sequence { (\
UGACGUUGACUGAUGCGUGUACUGGUAUCGGUAUGCUGACUGAUGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.008214694 ubox
1 17 0.031364659 ubox
1 19 0.029661141 ubox
1 21 0.077228737 ubox
1 24 0.007212670 ubox
1 38 0.045009121 ubox
1 39 0.112430262 ubox
1 42 0.021334443 ubox
1 43 0.033851934 ubox
1 45 0.007416467 ubox
2 7 0.008250869 ubox
2 16 0.055073098 ubox
2 18 0.021677644 ubox
2 20 0.082164086 ubox
2 22 0.032971715 ubox
2 23 0.009511418 ubox
2 36 0.128237790 ubox
2 37 0.048250253 ubox
2 40 0.136552307 ubox
2 41 0.021150150 ubox
2 44 0.009011695 ubox
2 46 0.027440541 ubox
3 7 0.004926238 ubox
3 18 0.436437355 ubox
3 20 0.016393060 ubox
3 23 0.005876905 ubox
3 26 0.003834927 ubox
3 34 0.003953152 ubox
3 37 0.153054809 ubox
3 41 0.040448416 ubox
3 44 0.013664683 ubox
4 8 0.009744433 ubox
4 12 0.006136613 ubox
4 15 0.072019037 ubox
4 17 0.448192685 ubox
4 19 0.015960446 ubox
4 24 0.021192850 ubox
4 25 0.004305078 ubox
4 35 0.215780833 ubox
4 38 0.228697615 ubox
4 42 0.049329617 ubox
4 45 0.090908695 ubox
5 10 0.004596434 ubox
5 11 0.005101014 ubox
5 14 0.072467265 ubox
5 16 0.449097874 ubox
5 18 0.009539895 ubox
5 22 0.040405678 ubox
5 23 0.014250860 ubox
5 34 0.215937846 ubox
5 36 0.766551333 ubox
5 37 0.089326687 ubox
5 40 0.169200253 ubox
5 41 0.013735671 ubox
5 44 0.090710784 ubox
5 46 0.013105381 ubox
6 12 0.003252345 ubox
6 13 0.072516541 ubox
6 15 0.447602041 ubox
6 17 0.004556331 ubox
6 21 0.039823713 ubox
6 33 0.202484083 ubox
6 35 0.761357931 ubox
6 38 0.011260114 ubox
6 39 0.169265675 ubox
6 43 0.090565822 ubox
6 45 0.013000895 ubox
7 12 0.068905035 ubox
7 13 0.048023189 ubox
7 15 0.010150654 ubox
7 17 0.011232226 ubox
7 21 0.009693431 ubox
7 33 0.077308672 ubox
7 35 0.054599124 ubox
7 38 0.163198016 ubox
7 39 0.003572398 ubox
7 42 0.087052736 ubox
8 14 0.008132856 ubox
8 16 0.015020542 ubox
8 20 0.008683701 ubox
8 22 0.011249851 ubox
8 32 0.064640250 ubox
8 34 0.062237931 ubox
8 36 0.060313890 ubox
8 37 0.136544116 ubox
8 40 0.023797467 ubox
8 41 0.072757596 ubox
8 46 0.003361988 ubox
9 14 0.010661996 ubox
9 18 0.041384155 ubox
9 20 0.027800643 ubox
9 32 0.872409392 ubox
9 34 0.008366396 ubox
9 37 0.004876233 ubox
9 41 0.005565004 ubox
10 15 0.017723029 ubox
10 17 0.041736371 ubox
10 19 0.028962870 ubox
10 24 0.003205863 ubox
10 30 0.005641229 ubox
10 31 0.886625142 ubox
10 35 0.003294155 ubox
10 42 0.007504093 ubox
10 45 0.004860231 ubox
11 17 0.005400786 ubox
11 30 0.886141383 ubox
11 39 0.008404068 ubox
11 42 0.003412697 ubox
11 43 0.005722166 ubox
12 16 0.007314227 ubox
12 29 0.886867057 ubox
12 37 0.003228629 ubox
12 40 0.012606485 ubox
12 41 0.004751148 ubox
13 28 0.886681543 ubox
13 37 0.010039046 ubox
13 41 0.006642458 ubox
14 27 0.886208375 ubox
14 38 0.004492300 ubox
14 39 0.015010676 ubox
15 26 0.886650419 ubox
15 36 0.017908229 ubox
15 37 0.006868148 ubox
15 40 0.009809769 ubox
15 46 0.005907681 ubox
16 24 0.025645078 ubox
16 25 0.886517002 ubox
16 35 0.017896838 ubox
16 38 0.018237591 ubox
16 45 0.006037554 ubox
17 22 0.030217868 ubox
17 23 0.028719078 ubox
17 34 0.012887201 ubox
17 36 0.068286100 ubox
17 44 0.004584157 ubox
18 24 0.039040371 ubox
18 33 0.009967401 ubox
18 35 0.068412712 ubox
18 43 0.004475964 ubox
19 23 0.027035347 ubox
19 32 0.004837581 ubox
19 34 0.082870777 ubox
19 36 0.003499880 ubox
19 46 0.006067045 ubox
20 24 0.006527156 ubox
20 33 0.084487018 ubox
20 45 0.006021592 ubox
21 32 0.085154250 ubox
21 44 0.005422321 ubox
22 31 0.085379144 ubox
23 30 0.085243503 ubox
23 38 0.003679173 ubox
23 42 0.004030366 ubox
24 29 0.084443228 ubox
24 37 0.005805703 ubox
24 41 0.005338148 ubox
24 46 0.021268322 ubox
25 36 0.005989632 ubox
25 40 0.005387918 ubox
25 46 0.447539633 ubox
26 35 0.005987911 ubox
26 39 0.003548117 ubox
26 45 0.452304970 ubox
27 34 0.005842799 ubox
27 44 0.453327430 ubox
28 33 0.005182472 ubox
28 39 0.005180879 ubox
28 43 0.453723759 ubox
29 38 0.006407754 ubox
29 42 0.453851578 ubox
30 37 0.006601333 ubox
30 40 0.003317838 ubox
30 41 0.453520011 ubox
31 36 0.006614396 ubox
31 40 0.453825426 ubox
31 46 0.013420364 ubox
32 38 0.030812958 ubox
32 39 0.439061783 ubox
32 45 0.018969277 ubox
33 37 0.036445373 ubox
33 41 0.004192466 ubox
33 44 0.034182402 ubox
34 38 0.025805601 ubox
34 39 0.014015374 ubox
34 43 0.035525106 ubox
34 45 0.004682978 ubox
35 40 0.017944088 ubox
35 41 0.004085422 ubox
35 44 0.007801888 ubox
35 46 0.225227691 ubox
36 42 0.045579300 ubox
36 45 0.229228578 ubox
37 42 0.016152206 ubox
37 43 0.044322233 ubox
37 45 0.010805392 ubox
38 44 0.011086959 ubox
38 46 0.037855078 ubox
39 44 0.016971762 ubox
40 45 0.120908599 ubox
41 45 0.008264539 ubox
42 46 0.010678864 ubox
5 36 0.9500000 lbox
6 35 0.9500000 lbox
9 32 0.9500000 lbox
10 31 0.9500000 lbox
11 30 0.9500000 lbox
12 29 0.9500000 lbox
13 28 0.9500000 lbox
14 27 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
showpage
end
%%EOF
